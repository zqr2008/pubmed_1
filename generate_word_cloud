import re # 正则表达式库
import collections # 词频统计库
import numpy as np # numpy数据处理库
import jieba # 结巴分词
import wordcloud # 词云展示库
from PIL import Image # 图像处理库
import matplotlib.pyplot as plt # 图像展示库

# 读取文件
fn = open(r"C:\Users\mjdee\hello\all-out.txt",'r',encoding='utf-8') # 打开文件
string_data = fn.read() # 读出整个文件
fn.close() # 关闭文件

# 文本预处理
pattern = re.compile(u'\t|\n|\.|-|:|;|\)|\(|\?|"') # 定义正则表达式匹配模式
string_data = re.sub(pattern,'',string_data) # 将符合模式的字符去除


# 文本分词
seg_list_exact = jieba.cut(string_data, cut_all = False) # 精确模式分词
object_list = []
remove_words = [u'and', u'，',u'with', u'for', u'a', u',', u'or',u'all',u'in',u'both',u'。',u' ',u'of',u'the',u'by',u'after',
                u'to',u'on',u'A',u'in',u'an',u'during',u'from',u'after',u'With',u'out',u'as'] # 自定义去除词库

for word in seg_list_exact: # 循环读出每个分词
    if word not in remove_words: # 如果不在去除词库中
        object_list.append(word) # 分词追加到列表

# 词频统计
word_counts = collections.Counter(object_list) # 对分词做词频统计
word_counts_top10 = word_counts.most_common(10) # 获取前10最高频的词
print (word_counts_top10) # 输出检查
word_counts_top10 = str(word_counts_top10)

# 词频展示
mask = np.array(Image.open(r"C:\Users\mjdee\Pictures\36321433545_2c04aeb5dd_o-860x574.jpg")) # 定义词频背景
wc = wordcloud.WordCloud(
    font_path='simfang.ttf', # 设置字体格式
    mask=mask, # 设置背景图
    max_words=200, # 最多显示词数
    max_font_size=150, # 字体最大值
    background_color='white',
    width=800, height=600,
)

wc.generate_from_frequencies(word_counts) # 从字典生成词云
plt.imshow(wc) # 显示词云
plt.axis('off') # 关闭坐标轴
plt.show() # 显示图像
wc.to_file('wordcloud.png')
